{
  "// ============================================": "MCP MASTER TEMPLATE",
  "// INSTRUCTIONS": [
    "1. Copy this file to your project as .mcp.json",
    "2. Remove the sections you don't need",
    "3. Replace YOUR_KEY_HERE with actual API keys",
    "4. Most servers use 'uvx' or 'npx' to run",
    "5. Reference: https://github.com/modelcontextprotocol/servers"
  ],

  "mcpServers": {
    "// ========== BROWSER AUTOMATION ==========": {},

    "playwright": {
      "command": "uvx",
      "args": ["@microsoft/mcp-server-playwright"],
      "// info": "Microsoft official - Browser automation with Playwright"
    },

    "puppeteer": {
      "command": "uvx",
      "args": ["@modelcontextprotocol/server-puppeteer"],
      "// info": "Web scraping and automation with Puppeteer"
    },

    "// ========== DATABASE ==========": {},

    "sqlite": {
      "command": "uvx",
      "args": ["@modelcontextprotocol/server-sqlite", "--db-path", "./database.db"],
      "// info": "SQLite database operations"
    },

    "postgres": {
      "command": "uvx",
      "args": ["@modelcontextprotocol/server-postgres"],
      "env": {
        "DATABASE_URL": "postgresql://user:password@localhost/dbname"
      },
      "// info": "PostgreSQL database operations"
    },

    "supabase": {
      "command": "uvx",
      "args": ["@supabase/mcp"],
      "env": {
        "SUPABASE_URL": "YOUR_SUPABASE_URL",
        "SUPABASE_SERVICE_KEY": "YOUR_SERVICE_KEY"
      },
      "// info": "Supabase backend integration"
    },

    "// ========== FILE SYSTEM ==========": {},

    "filesystem": {
      "command": "uvx",
      "args": ["@modelcontextprotocol/server-filesystem", "--root", "./"],
      "// info": "File system operations with access control"
    },

    "// ========== VERSION CONTROL ==========": {},

    "git": {
      "command": "uvx",
      "args": ["@modelcontextprotocol/server-git"],
      "// info": "Git repository operations"
    },

    "github": {
      "command": "uvx",
      "args": ["@modelcontextprotocol/server-github"],
      "env": {
        "GITHUB_TOKEN": "YOUR_GITHUB_TOKEN"
      },
      "// info": "GitHub API integration"
    },

    "// ========== AI/LLM ==========": {},

    "anthropic": {
      "command": "uvx",
      "args": ["@modelcontextprotocol/server-anthropic"],
      "env": {
        "ANTHROPIC_API_KEY": "YOUR_API_KEY"
      },
      "// info": "Anthropic Claude API integration"
    },

    "openai": {
      "command": "uvx",
      "args": ["@modelcontextprotocol/server-openai"],
      "env": {
        "OPENAI_API_KEY": "YOUR_API_KEY"
      },
      "// info": "OpenAI API integration"
    },

    "// ========== WEB TOOLS ==========": {},

    "fetch": {
      "command": "uvx",
      "args": ["@modelcontextprotocol/server-fetch"],
      "// info": "Web content fetching and conversion"
    },

    "// ========== DEVELOPMENT TOOLS ==========": {},

    "memory": {
      "command": "uvx",
      "args": ["@modelcontextprotocol/server-memory"],
      "// info": "Knowledge graph persistent memory"
    },

    "sequential-thinking": {
      "command": "uvx",
      "args": ["@modelcontextprotocol/server-sequential-thinking"],
      "// info": "Dynamic problem solving with thought sequences"
    },

    "// ========== CLOUD SERVICES ==========": {},

    "aws": {
      "command": "uvx",
      "args": ["@modelcontextprotocol/server-aws"],
      "env": {
        "AWS_ACCESS_KEY_ID": "YOUR_KEY",
        "AWS_SECRET_ACCESS_KEY": "YOUR_SECRET",
        "AWS_REGION": "us-east-1"
      },
      "// info": "AWS services integration"
    },

    "google-cloud": {
      "command": "uvx",
      "args": ["@modelcontextprotocol/server-gcp"],
      "env": {
        "GOOGLE_APPLICATION_CREDENTIALS": "./service-account.json"
      },
      "// info": "Google Cloud Platform integration"
    },

    "// ========== PRODUCTIVITY ==========": {},

    "slack": {
      "command": "uvx",
      "args": ["@modelcontextprotocol/server-slack"],
      "env": {
        "SLACK_BOT_TOKEN": "YOUR_BOT_TOKEN"
      },
      "// info": "Slack workspace integration"
    },

    "google-drive": {
      "command": "uvx",
      "args": ["@modelcontextprotocol/server-gdrive"],
      "env": {
        "GOOGLE_CREDENTIALS": "./credentials.json"
      },
      "// info": "Google Drive file operations"
    },

    "// ========== EXAMPLE PROJECT CONFIGS ==========": {},

    "// Example 1: Web Scraping Project": {
      "playwright": "...",
      "filesystem": "...",
      "sqlite": "..."
    },

    "// Example 2: Full-Stack Development": {
      "git": "...",
      "github": "...",
      "postgres": "...",
      "filesystem": "..."
    },

    "// Example 3: Data Analysis": {
      "filesystem": "...",
      "sqlite": "...",
      "memory": "...",
      "sequential-thinking": "..."
    }
  }
}